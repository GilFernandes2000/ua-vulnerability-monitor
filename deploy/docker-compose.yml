version: "3"

services:
  app:
    container_name: app
    image: web
    links:
      - db
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: myuser
      RABBITMQ_PASSWORD: mypassword
    ports:
      - 8000:8000
    restart: "on-failure"
    depends_on:
      - rabbitmq
      - celeryworker
      - celeryscheduler
      - db
    networks:
      - backend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # extra_hosts:
    #   - "dockerhost:$DOCKERHOST"
  
  db:
    image: mariadb:10.7
    restart: always
    environment:
      MARIADB_DATABASE: 'project'
      MARIADB_USER: 'username'
      MARIADB_PASSWORD: 'password'
      MARIADB_ROOT_PASSWORD: 'toor'
      # MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: 1
    volumes:
      - ../src/db/entry:/docker-entrypoint-initdb.d/:ro
      - ../src/db/data:/var/lib/mysql
      # - ../src/db:/docker-entrypoint-initdb.d/:ro
      # - ../src/db/data:/var/lib/mysql
    networks:
      - backend

  rabbitmq:
    restart: always
    image: rabbitmq:3.9-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: myuser
      RABBITMQ_DEFAULT_PASS: mypassword
    
    volumes:
        - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
        - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
        - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
 #     - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - backend
    depends_on:
      - web

  celeryworker:
    restart: unless-stopped
    container_name: celeryworker
    image: web
    command: celery -A uavm.celery worker --loglevel=INFO
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: myuser
      RABBITMQ_PASSWORD: mypassword
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - rabbitmq
    networks:
      - backend
  
  celeryscheduler:
    restart: unless-stopped
    container_name: celeryscheduler
    image: web
    command: celery -A uavm.celery beat --loglevel=INFO
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: myuser
      RABBITMQ_PASSWORD: mypassword
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
     - rabbitmq
    networks:
     - backend

  


volumes:
  rabbitmq:

networks:
  backend:
  