import markdown
import json
from xhtml2pdf import pisa

def html_2_pdf(in_html):
    res_file = open('report.pdf', 'w+b')
    pisa_stats = pisa.CreatePDF(in_html, dest=res_file)
    res_file.close()
    
    return pisa_stats.err

with open('final_cvss_scores.json','r') as j:
    ips = json.loads(j.read())

with open('ips.json', 'r') as i:
    domains = json.loads(i.read())

with open('relatorio.md', 'bw+') as f:
    f.write('<head>'.encode('utf-8'))
    f.write('<style>'.encode('utf-8'))
    f.write('h1 {text-align: center;}'.encode('utf-8'))
    f.write('</style>'.encode('utf-8'))
    f.write('</head>'.encode('utf-8'))
    f.write('<body>'.encode('utf-8'))
    f.write('<h1>Vulnerability Report</h1>'.encode('utf-8'))
    for ip in ips:
        name = list(domains.keys())[list(domains.values()).index(ip)]
        f.write('<h2>{} - {}</h2>'.format(ip,name).encode('utf-8'))
        for cve in ips[ip]:
            if 'CVE' in cve:
                f.write('<h3>{}</h3>\n'.format(cve).encode('utf-8'))
                for info, thing in ips[ip][cve].items():
                    f.write('<b>{}</b>: {}</br>'.format(info, thing).encode('utf-8'))
                    
            elif 'ports' in cve:
                f.write('<h3>{}</h3>\n'.format(cve).encode('utf-8'))
                for port in ips[ip][cve]:
                    if 'Filtered' in port:
                        f.write('<b>{}</b>: {}</br>'.format(port, ips[ip][cve][port]).encode('utf-8'))
                        f.write('</br>'.encode('utf-8'))
                    else:
                        f.write('<b>{}</b> </br>'.format(port).encode('utf-8'))
                        f.write('</br>'.encode('utf-8'))
                        for num in ips[ip][cve][port]:
                            f.write('<b>{}</b> </br>'.format(num, ips[ip][cve][port][num]).encode('utf-8'))
                            for tp in ips[ip][cve][port][num]:
                                f.write('\t<b>{}</b>: {}</br>'.format(tp, ips[ip][cve][port][num][tp]).encode('utf-8'))
                            f.write('</br>'.encode('utf-8'))
            
            elif 'Route' in cve:
                f.write('<h3>{}</h3>\n'.format(cve).encode('utf-8'))
                for r in ips[ip][cve]:
                    f.write('<b>{}</b>: {}</br>'.format(r, ips[ip][cve][r]).encode('utf-8'))
                f.write('</br>'.encode('utf-8'))
                
            else:
                f.write('<b>{}</b>: {}</br>'.format(cve, ips[ip][cve]).encode('utf-8'))
        f.write('\n'.encode('utf-8'))
        f.write('</body>'.encode('utf-8'))
    f.seek(0)
    
    markdown.markdownFromFile(input=f, output='report.html')

in_html = open('report.html', 'r')
pisa.showLogging()
html_2_pdf(in_html)
in_html.close()

