import json
import re
import socket
import subprocess

def listToString(s): 
    
    str1 = "" 
    
    for ele in s: 
        str1 += ele 
        str1 += " " 
    
    return str1

def add_KV_to_json(filename, key, value):
    try:
        with open(filename) as json_file:
            contents = json.loads(json_file.read())
        
        if key not in contents.keys():
            contents[key] = value
            with open(filename, 'w') as json_file:
                json.dump(contents, json_file, indent=4)
            
    except FileNotFoundError:
        contents = dict()
        with open(filename, 'w') as json_file:
            contents[key] = value
            json.dump(contents, json_file, indent=4)
            
            
class info_from_ip():            
    def port_info(self):
        ports = dict()
        with open('results.txt','r') as f:
            data = f.readlines()
            keyword = 'Not shown'
            ports['open'] = dict()
            for d in data:
                if keyword in d:
                    fil = d.split(':')[1]
                    ports['Filtered'] = fil.split('(')[0]
                if d[0].isdigit() and d[1].isdigit():
                    info = re.findall( r'\S+', d)
                    if info[1] == 'open':
                        port_type = info[0].split('/')
                        ports['open'][port_type[0]] = dict()
                        if len(port_type) > 1:
                            ports['open'][port_type[0]]['type'] = port_type[1]
                        else:
                            ports['open'][port_type[0]]['type'] = 'NF'

                        ports['open'][port_type[0]]['state'] = info[1]
                        ports['open'][port_type[0]]['service'] = info[2]
                        ports['open'][port_type[0]]['version'] = listToString(info[3:])
        return ports

    def os_info(self):
        os = ''
        with open('results.txt','r') as f:
            data = f.readlines()
            os_key = 'Aggressive OS guesses'
            for d in data:
                if os_key in d:
                    sp = d.split(':')[1]
                    com = sp.split(',')[0]
                    os = com.split('(')[0]
        return os

    def routes(self):
        ips = list()
        final = dict()
        with open('results.txt','r') as f:
            data = f.readlines()
            count = -1
            keyword = 'TRACEROUTE'
            for d in data:
                count += 1
                if keyword in d:
                    info = data[count+2:]
                    for i in info:
                        if i[0].isdigit():
                            ip = re.findall(r'\S+', i)[3]
                            ips.append(ip)
        
        for ip in ips:
            try:
                if ip[-1].isdigit():
                    name = socket.gethostbyaddr(ip)
                    final[name] = ip
                    add_KV_to_json('ips.json', name, ip)
                else:
                    final[ip] = socket.gethostbyname(ip)
                    add_KV_to_json('ips.json', ip, final[ip])
            except Exception as e:
                final[ip] = ip
                add_KV_to_json('ips.json', ip, final[ip])
                continue   
        return final
